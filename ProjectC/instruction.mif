DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0  	:

20010005

20020003

00224820

20030001

00032021

24650000

00222022

00034823

70222802

00223024

3027000f

00224025

3429000f

00222026

3825000f

00223027

3c01abcd

34211234

00011820

80640000

84650000

8c660000

2003ffff

90670000

94680000

00002820

00003020

00003820

a0650000

a4660000

ac670000

0041202a

2845000f

2c06ffff

0003382b

2003ffff

00032080

00032882

00033083

20040002

00833804

00834006

00834807

00001820

3c03abcd

2004ffff

04710006

08100031

14200002

0421fffe

0c10002e

1800fffe

04800001

0410fffe

1c600001

00401809

1000fffe

00600008;
END;
