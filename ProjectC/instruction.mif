DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0  	:

20010005

20020003

00224820

20030009

01212022

70832802

20010007

20020003

00413024

30270007

00e64025

35090003

20010007

20020003

00222026

38850003

00853027

20010005

20020003

0041202a

2845000f

2ca6ffff

00c2382b

3c010000

3421ffff

00011820

00032080

3c010000

3421ffff

00012820

00053082

3c010000

3421ffff

00013820

00074083

20040002

3c010000

3421ffff

00011820

00833804

3c010000

3421ffff

00012820

00854006

3c010000

3421ffff

00013820

00874807

00001820

3c03abcd

20040005

8c860000

00c44820

20030005

80640000

84650000

20040005

8c860000

20030005

90670000

94680000

20030005

a0650000

20040008

a4860000

2008000c

ad070000

0471000b

00000000

08100045

14200004

00000000

0421fffd

00000000

0c100040

1800fffe

00000000

04800003

00000000

0410fffd

00000000

1c600002

00000000

00401809

1000fffe

00000000

00600008;
END;
